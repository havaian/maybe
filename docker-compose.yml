version: '3.8'

services:
  db:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: maybe_production
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:2432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis}
    volumes:
      - redis_data:/data
    ports:
      - "127.0.0.1:2479:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  web:
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_COMMIT_SHA: ${CI_COMMIT_SHA:-latest}
    restart: unless-stopped
    ports:
      - "127.0.0.1:${PORT:-2400}:3000"
    env_file:
      - .env.production
    environment:
      # Rails Environment
      RAILS_ENV: production
      
      # Database Configuration
      DB_HOST: db
      DB_PORT: 5432
      POSTGRES_DB: maybe_production
      
      # Redis Configuration
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis}@redis:6379/0
      
      # Active Record Encryption (optional - will auto-generate if not provided)
      ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY: ${ACTIVE_RECORD_ENCRYPTION_PRIMARY_KEY}
      ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY: ${ACTIVE_RECORD_ENCRYPTION_DETERMINISTIC_KEY}
      ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT: ${ACTIVE_RECORD_ENCRYPTION_KEY_DERIVATION_SALT}
      
      # SSL Configuration
      DISABLE_SSL: ${DISABLE_SSL:-false}
      
    volumes:
      - app_storage:/rails/storage
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        bundle exec rails db:prepare &&
        echo 'Starting Rails server...' &&
        bundle exec rails server -b 0.0.0.0 -p 3000
      "

volumes:
  postgres_data:
  redis_data:
  app_storage: